#!/usr/bin/env php
<?php
use wapmorgan\ServerAvailabilityMonitor\AddCommand;
use wapmorgan\ServerAvailabilityMonitor\ConfigCommand;
use wapmorgan\ServerAvailabilityMonitor\EditCommand;
use wapmorgan\ServerAvailabilityMonitor\DeleteCommand;
use wapmorgan\ServerAvailabilityMonitor\ServerLogCommand;
use wapmorgan\ServerAvailabilityMonitor\ManageCommand;
use wapmorgan\ServerAvailabilityMonitor\MonitorCommand;
use wapmorgan\ServerAvailabilityMonitor\RenameCommand;
use wapmorgan\ServerAvailabilityMonitor\TestCommand;
use Symfony\Component\Console\Application;

$paths = [
	__DIR__.'/../vendor/autoload.php',
	__DIR__.'/../autoload.php',
	__DIR__.'/../../../autoload.php',
	];

function init_composer(array $paths) {
	foreach ($paths as $path) {
		if (file_exists($path)) {
			require_once $path;
			return true;
		}
	}
	return false;
}

if (!init_composer($paths)) die('Run `composer install` firstly.'.PHP_EOL);

$version = file_exists(__DIR__.'/version.txt') ? trim(file_get_contents(__DIR__.'/version.txt')) : null;
$application = new Application('Server Availability Monitor', $version);
$application->add(new AddCommand());
$application->add(new ConfigCommand());
$application->add(new DeleteCommand());
$application->add(new EditCommand());
$application->add(new ServerLogCommand());
$application->add(new ManageCommand());
$application->add(new MonitorCommand());
$application->add(new RenameCommand());
$application->add(new TestCommand());
// $application->setDefaultCommand('monitor');
$application->run();
